C51 COMPILER V9.59.0.0   WATCH_DOG                                                         03/09/2021 15:54:52 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE WATCH_DOG
OBJECT MODULE PLACED IN watch_dog.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE watch_dog.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          /*************  本程序功能说明  **************
  15          
  16          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  17          
  18          用STC的MCU的IO方式驱动8位数码管。
  19          
  20          下载时, 选择时钟 24MHZ (用户可自行修改频率).
  21          
  22          显示效果为: 显示秒计数, 5秒后不喂狗, 等复位.
  23          
  24          ******************************************/
  25          #include    "reg51.h"       //包含此头文件后，里面声明的寄存器不需要再手动输入，避免重复定义
  26          #include    "intrins.h"
  27          
  28          #define MAIN_Fosc       24000000L   //定义主时钟
  29          
  30          
  31          typedef     unsigned char   u8;
  32          typedef     unsigned int    u16;
  33          typedef     unsigned long   u32;
  34          
  35          //手动输入声明"reg51.h"头文件里面没有定义的寄存器
  36          sfr WDT_CONTR = 0xC1;
  37          #define D_WDT_FLAG          (1<<7)
  38          #define D_EN_WDT            (1<<5)
  39          #define D_CLR_WDT           (1<<4)  //auto clear
  40          #define D_IDLE_WDT          (1<<3)  //WDT counter when Idle
  41          #define D_WDT_SCALE_2       0
  42          #define D_WDT_SCALE_4       1
  43          #define D_WDT_SCALE_8       2       //T=393216*N/fo
  44          #define D_WDT_SCALE_16      3
  45          #define D_WDT_SCALE_32      4
  46          #define D_WDT_SCALE_64      5
  47          #define D_WDT_SCALE_128     6
  48          #define D_WDT_SCALE_256     7
  49          
  50          sfr P4   = 0xC0;
  51          sfr P5   = 0xC8;
  52          sfr P6   = 0xE8;
  53          sfr P7   = 0xF8;
  54          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  55          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
C51 COMPILER V9.59.0.0   WATCH_DOG                                                         03/09/2021 15:54:52 PAGE 2   

  56          sfr P0M1 = 0x93;
  57          sfr P0M0 = 0x94;
  58          sfr P2M1 = 0x95;
  59          sfr P2M0 = 0x96;
  60          sfr P3M1 = 0xB1;
  61          sfr P3M0 = 0xB2;
  62          sfr P4M1 = 0xB3;
  63          sfr P4M0 = 0xB4;
  64          sfr P5M1 = 0xC9;
  65          sfr P5M0 = 0xCA;
  66          sfr P6M1 = 0xCB;
  67          sfr P6M0 = 0xCC;
  68          sfr P7M1 = 0xE1;
  69          sfr P7M0 = 0xE2;
  70          
  71          sbit P00 = P0^0;
  72          sbit P01 = P0^1;
  73          sbit P02 = P0^2;
  74          sbit P03 = P0^3;
  75          sbit P04 = P0^4;
  76          sbit P05 = P0^5;
  77          sbit P06 = P0^6;
  78          sbit P07 = P0^7;
  79          sbit P10 = P1^0;
  80          sbit P11 = P1^1;
  81          sbit P12 = P1^2;
  82          sbit P13 = P1^3;
  83          sbit P14 = P1^4;
  84          sbit P15 = P1^5;
  85          sbit P16 = P1^6;
  86          sbit P17 = P1^7;
  87          sbit P20 = P2^0;
  88          sbit P21 = P2^1;
  89          sbit P22 = P2^2;
  90          sbit P23 = P2^3;
  91          sbit P24 = P2^4;
  92          sbit P25 = P2^5;
  93          sbit P26 = P2^6;
  94          sbit P27 = P2^7;
  95          sbit P30 = P3^0;
  96          sbit P31 = P3^1;
  97          sbit P32 = P3^2;
  98          sbit P33 = P3^3;
  99          sbit P34 = P3^4;
 100          sbit P35 = P3^5;
 101          sbit P36 = P3^6;
 102          sbit P37 = P3^7;
 103          sbit P40 = P4^0;
 104          sbit P41 = P4^1;
 105          sbit P42 = P4^2;
 106          sbit P43 = P4^3;
 107          sbit P44 = P4^4;
 108          sbit P45 = P4^5;
 109          sbit P46 = P4^6;
 110          sbit P47 = P4^7;
 111          sbit P50 = P5^0;
 112          sbit P51 = P5^1;
 113          sbit P52 = P5^2;
 114          sbit P53 = P5^3;
 115          sbit P54 = P5^4;
 116          sbit P55 = P5^5;
 117          sbit P56 = P5^6;
C51 COMPILER V9.59.0.0   WATCH_DOG                                                         03/09/2021 15:54:52 PAGE 3   

 118          sbit P57 = P5^7;
 119          
 120          
 121          #define DIS_DOT     0x20
 122          #define DIS_BLACK   0x10
 123          #define DIS_        0x11
 124          
 125          /****************************** 用户定义宏 ***********************************/
 126          
 127          #define     Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer 0 中断频率, 1000次/秒
 128          
 129          /*****************************************************************************/
 130          
 131          
 132          /*************  本地常量声明    **************/
 133          u8 code t_display[]={                       //标准字库
 134          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
 135              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
 136          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
 137              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
 138              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
 139          
 140          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};      //位码
 141          
 142          
 143          /*************  本地变量声明    **************/
 144          
 145          u8  LED8[8];        //显示缓冲
 146          u8  display_index;  //显示位索引
 147          
 148          u16 ms_cnt;
 149          u8  tes_cnt;    //测试用的计数变量
 150          
 151          void    delay_ms(u8 ms);
 152          void    DisplayScan(void);
 153          
 154          /********************** 主函数 ************************/
 155          void main(void)
 156          {
 157   1          u8  i;
 158   1          
 159   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
 160   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
 161   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
 162   1          P3M1 = 0;   P3M0 = 0;   //设置为准双向口
 163   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
 164   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
 165   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
 166   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
 167   1      
 168   1          display_index = 0;
 169   1          for(i=0; i<8; i++)  LED8[i] = DIS_BLACK;    //全部消隐
 170   1          
 171   1          tes_cnt = 0;
 172   1          ms_cnt = 0;
 173   1          LED8[7] = ms_cnt;
 174   1      
 175   1          while(1)
 176   1          {
 177   2              delay_ms(1);    //延时1ms
 178   2              DisplayScan();
 179   2              if(tes_cnt <= 5)    //5秒后不喂狗, 将复位,
C51 COMPILER V9.59.0.0   WATCH_DOG                                                         03/09/2021 15:54:52 PAGE 4   

 180   2                  WDT_CONTR = (D_EN_WDT + D_CLR_WDT + D_WDT_SCALE_16);    // 喂狗
 181   2      
 182   2              if(++ms_cnt >= 1000)
 183   2              {
 184   3                  ms_cnt = 0;
 185   3                  tes_cnt++;
 186   3                  LED8[7] = tes_cnt;
 187   3              }
 188   2      
 189   2          }
 190   1      } 
 191          
 192          /**********************************************/
 193          
 194          //========================================================================
 195          // 函数: void delay_ms(u8 ms)
 196          // 描述: 延时函数。
 197          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
 198          // 返回: none.
 199          // 版本: VER1.0
 200          // 日期: 2021-3-9
 201          // 备注: 
 202          //========================================================================
 203          void delay_ms(u8 ms)
 204          {
 205   1           u16 i;
 206   1           do{
 207   2                i = MAIN_Fosc / 10000;
 208   2                while(--i);   //10T per loop
 209   2           }while(--ms);
 210   1      }
 211          
 212          
 213          /********************** 显示扫描函数 ************************/
 214          void DisplayScan(void)
 215          {   
 216   1          P7 = ~T_COM[7-display_index];
 217   1          P6 = ~t_display[LED8[display_index]];
 218   1          if(++display_index >= 8)    display_index = 0;  //8位结束回0
 219   1      }
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
