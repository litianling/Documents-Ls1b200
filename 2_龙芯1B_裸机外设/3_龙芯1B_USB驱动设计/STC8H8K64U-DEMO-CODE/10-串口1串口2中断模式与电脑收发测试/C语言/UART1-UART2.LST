C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART1_UART2
OBJECT MODULE PLACED IN UART1-UART2.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE UART1-UART2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          /*************  功能说明    **************
  15          
  16          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  17          
  18          双串口全双工中断方式收发通讯程序。
  19          
  20          通过PC向MCU发送数据, MCU收到后通过串口把收到的数据原样返回.
  21          
  22          用定时器做波特率发生器，建议使用1T模式(除非低波特率用12T)，选择可被波特率整除的时钟频率，以提高精度。
  23          
  24          下载时, 选择时钟 22.1184MHz (用户可自行修改频率).
  25          
  26          ******************************************/
  27          
  28          #include    "reg51.h"       //包含此头文件后，里面声明的寄存器不需要再手动输入，避免重复定义
  29          #include    "intrins.h"
  30          
  31          #define MAIN_Fosc       22118400L   //定义主时钟（精确计算115200波特率）
  32          
  33          typedef     unsigned char   u8;
  34          typedef     unsigned int    u16;
  35          typedef     unsigned long   u32;
  36          
  37          //手动输入声明"reg51.h"头文件里面没有定义的寄存器
  38          sfr AUXR = 0x8E;
  39          sfr S2CON = 0x9A;   //
  40          sfr S2BUF = 0x9B;   //
  41          sfr TH2  = 0xD6;
  42          sfr TL2  = 0xD7;
  43          sfr IE2   = 0xAF;
  44          sfr INT_CLKO = 0x8F;
  45          sfr P_SW1 = 0xA2;
  46          sfr P_SW2 = 0xBA;
  47          
  48          sfr P4   = 0xC0;
  49          sfr P5   = 0xC8;
  50          sfr P6   = 0xE8;
  51          sfr P7   = 0xF8;
  52          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  53          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  54          sfr P0M1 = 0x93;
  55          sfr P0M0 = 0x94;
C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 2   

  56          sfr P2M1 = 0x95;
  57          sfr P2M0 = 0x96;
  58          sfr P3M1 = 0xB1;
  59          sfr P3M0 = 0xB2;
  60          sfr P4M1 = 0xB3;
  61          sfr P4M0 = 0xB4;
  62          sfr P5M1 = 0xC9;
  63          sfr P5M0 = 0xCA;
  64          sfr P6M1 = 0xCB;
  65          sfr P6M0 = 0xCC;
  66          sfr P7M1 = 0xE1;
  67          sfr P7M0 = 0xE2;
  68          
  69          sbit P00 = P0^0;
  70          sbit P01 = P0^1;
  71          sbit P02 = P0^2;
  72          sbit P03 = P0^3;
  73          sbit P04 = P0^4;
  74          sbit P05 = P0^5;
  75          sbit P06 = P0^6;
  76          sbit P07 = P0^7;
  77          sbit P10 = P1^0;
  78          sbit P11 = P1^1;
  79          sbit P12 = P1^2;
  80          sbit P13 = P1^3;
  81          sbit P14 = P1^4;
  82          sbit P15 = P1^5;
  83          sbit P16 = P1^6;
  84          sbit P17 = P1^7;
  85          sbit P20 = P2^0;
  86          sbit P21 = P2^1;
  87          sbit P22 = P2^2;
  88          sbit P23 = P2^3;
  89          sbit P24 = P2^4;
  90          sbit P25 = P2^5;
  91          sbit P26 = P2^6;
  92          sbit P27 = P2^7;
  93          sbit P30 = P3^0;
  94          sbit P31 = P3^1;
  95          sbit P32 = P3^2;
  96          sbit P33 = P3^3;
  97          sbit P34 = P3^4;
  98          sbit P35 = P3^5;
  99          sbit P36 = P3^6;
 100          sbit P37 = P3^7;
 101          sbit P40 = P4^0;
 102          sbit P41 = P4^1;
 103          sbit P42 = P4^2;
 104          sbit P43 = P4^3;
 105          sbit P44 = P4^4;
 106          sbit P45 = P4^5;
 107          sbit P46 = P4^6;
 108          sbit P47 = P4^7;
 109          sbit P50 = P5^0;
 110          sbit P51 = P5^1;
 111          sbit P52 = P5^2;
 112          sbit P53 = P5^3;
 113          sbit P54 = P5^4;
 114          sbit P55 = P5^5;
 115          sbit P56 = P5^6;
 116          sbit P57 = P5^7;
 117          
C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 3   

 118          #define Baudrate1   115200UL
 119          #define Baudrate2   115200UL
 120          
 121          #define UART1_BUF_LENGTH    32
 122          #define UART2_BUF_LENGTH    32
 123          
 124          u8  TX1_Cnt;    //发送计数
 125          u8  RX1_Cnt;    //接收计数
 126          u8  TX2_Cnt;    //发送计数
 127          u8  RX2_Cnt;    //接收计数
 128          bit B_TX1_Busy; //发送忙标志
 129          bit B_TX2_Busy; //发送忙标志
 130          
 131          u8  idata RX1_Buffer[UART1_BUF_LENGTH]; //接收缓冲
 132          u8  idata RX2_Buffer[UART2_BUF_LENGTH]; //接收缓冲
 133          
 134          void    UART1_config(u8 brt);   // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 135          void    UART2_config(u8 brt);   // 选择波特率, 2: 使用Timer2做波特率, 其它值: 无效.
 136          void    PrintString1(u8 *puts);
 137          void    PrintString2(u8 *puts);
 138          
 139          //========================================================================
 140          // 函数: void main(void)
 141          // 描述: 主函数。
 142          // 参数: none.
 143          // 返回: none.
 144          // 版本: VER1.0
 145          // 日期: 2014-11-28
 146          // 备注: 
 147          //========================================================================
 148          void main(void)
 149          {
 150   1          P0M1 = 0x00;   P0M0 = 0x00;   //设置为准双向口
 151   1          P1M1 = 0x00;   P1M0 = 0x00;   //设置为准双向口
 152   1          P2M1 = 0x00;   P2M0 = 0x00;   //设置为准双向口
 153   1          P3M1 = 0x00;   P3M0 = 0x00;   //设置为准双向口
 154   1          P4M1 = 0x00;   P4M0 = 0x00;   //设置为准双向口
 155   1          P5M1 = 0x00;   P5M0 = 0x00;   //设置为准双向口
 156   1          P6M1 = 0x00;   P6M0 = 0x00;   //设置为准双向口
 157   1          P7M1 = 0x00;   P7M0 = 0x00;   //设置为准双向口
 158   1      
 159   1          UART1_config(2);    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 160   1          UART2_config(2);    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 无效.
 161   1          EA = 1;             //允许全局中断
 162   1      
 163   1          PrintString1("STC8H8K64U UART1 Test Programme!\r\n");  //UART1发送一个字符串
 164   1          PrintString2("STC8H8K64U UART2 Test Programme!\r\n");  //UART2发送一个字符串
 165   1      
 166   1          while (1)
 167   1          {
 168   2              if((TX1_Cnt != RX1_Cnt) && (!B_TX1_Busy))   //收到数据, 发送空闲
 169   2              {
 170   3                  SBUF = RX1_Buffer[TX1_Cnt];
 171   3                  B_TX1_Busy = 1;
 172   3                  if(++TX1_Cnt >= UART1_BUF_LENGTH)   TX1_Cnt = 0;
 173   3              }
 174   2      
 175   2              if((TX2_Cnt != RX2_Cnt) && (!B_TX2_Busy))   //收到数据, 发送空闲
 176   2              {
 177   3                  S2BUF = RX2_Buffer[TX2_Cnt];
 178   3                  B_TX2_Busy = 1;
 179   3                  if(++TX2_Cnt >= UART2_BUF_LENGTH)   TX2_Cnt = 0;
C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 4   

 180   3              }
 181   2          }
 182   1      }
 183          
 184          
 185          //========================================================================
 186          // 函数: void PrintString1(u8 *puts)
 187          // 描述: 串口1发送字符串函数。
 188          // 参数: puts:  字符串指针.
 189          // 返回: none.
 190          // 版本: VER1.0
 191          // 日期: 2014-11-28
 192          // 备注: 
 193          //========================================================================
 194          void PrintString1(u8 *puts)
 195          {
 196   1          for (; *puts != 0;  puts++)     //遇到停止符0结束
 197   1          {
 198   2              SBUF = *puts;
 199   2              B_TX1_Busy = 1;
 200   2              while(B_TX1_Busy);
 201   2          }
 202   1      }
 203          
 204          //========================================================================
 205          // 函数: void PrintString2(u8 *puts)
 206          // 描述: 串口2发送字符串函数。
 207          // 参数: puts:  字符串指针.
 208          // 返回: none.
 209          // 版本: VER1.0
 210          // 日期: 2014-11-28
 211          // 备注: 
 212          //========================================================================
 213          void PrintString2(u8 *puts)
 214          {
 215   1          for (; *puts != 0;  puts++)     //遇到停止符0结束
 216   1          {
 217   2              S2BUF = *puts;
 218   2              B_TX2_Busy = 1;
 219   2              while(B_TX2_Busy);
 220   2          }
 221   1      }
 222          
 223          //========================================================================
 224          // 函数: SetTimer2Baudraye(u16 dat)
 225          // 描述: 设置Timer2做波特率发生器。
 226          // 参数: dat: Timer2的重装值.
 227          // 返回: none.
 228          // 版本: VER1.0
 229          // 日期: 2014-11-28
 230          // 备注: 
 231          //========================================================================
 232          void    SetTimer2Baudraye(u16 dat)
 233          {
 234   1          AUXR &= ~(1<<4);    //Timer stop
 235   1          AUXR &= ~(1<<3);    //Timer2 set As Timer
 236   1          AUXR |=  (1<<2);    //Timer2 set as 1T mode
 237   1          TH2 = dat / 256;
 238   1          TL2 = dat % 256;
 239   1          IE2  &= ~(1<<2);    //禁止中断
 240   1          AUXR |=  (1<<4);    //Timer run enable
 241   1      }
C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 5   

 242          
 243          //========================================================================
 244          // 函数: void   UART1_config(u8 brt)
 245          // 描述: UART1初始化函数。
 246          // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 247          // 返回: none.
 248          // 版本: VER1.0
 249          // 日期: 2014-11-28
 250          // 备注: 
 251          //========================================================================
 252          void    UART1_config(u8 brt)
 253          {
 254   1          /*********** 波特率使用定时器2 *****************/
 255   1          if(brt == 2)
 256   1          {
 257   2              AUXR |= 0x01;       //S1 BRT Use Timer2;
 258   2              SetTimer2Baudraye(65536UL - (MAIN_Fosc / 4) / Baudrate1);
 259   2          }
 260   1      
 261   1          /*********** 波特率使用定时器1 *****************/
 262   1          else
 263   1          {
 264   2              TR1 = 0;
 265   2              AUXR &= ~0x01;      //S1 BRT Use Timer1;
 266   2              AUXR |=  (1<<6);    //Timer1 set as 1T mode
 267   2              TMOD &= ~(1<<6);    //Timer1 set As Timer
 268   2              TMOD &= ~0x30;      //Timer1_16bitAutoReload;
 269   2              TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) / 256);
 270   2              TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) % 256);
 271   2              ET1 = 0;    //禁止中断
 272   2              INT_CLKO &= ~0x02;  //不输出时钟
 273   2              TR1  = 1;
 274   2          }
 275   1          /*************************************************/
 276   1      
 277   1          SCON = (SCON & 0x3f) | 0x40;    //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 0x80: 9位数
             -据,固定波特率, 0xc0: 9位数据,可变波特率
 278   1      //  PS  = 1;    //高优先级中断
 279   1          ES  = 1;    //允许中断
 280   1          REN = 1;    //允许接收
 281   1          P_SW1 &= 0x3f;
 282   1      //  P_SW1 |= 0x00;      //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 0x80: P1.6 P1.7, 0xC0: P4.3 P
             -4.4
 283   1      //  PCON2 |=  (1<<4);   //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
 284   1      
 285   1          B_TX1_Busy = 0;
 286   1          TX1_Cnt = 0;
 287   1          RX1_Cnt = 0;
 288   1      }
 289          
 290          
 291          //========================================================================
 292          // 函数: void   UART2_config(u8 brt)
 293          // 描述: UART2初始化函数。
 294          // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 无效.
 295          // 返回: none.
 296          // 版本: VER1.0
 297          // 日期: 2014-11-28
 298          // 备注: 
 299          //========================================================================
 300          void    UART2_config(u8 brt)    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 无效.
 301          {
C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 6   

 302   1          if(brt == 2)
 303   1          {
 304   2              SetTimer2Baudraye(65536UL - (MAIN_Fosc / 4) / Baudrate2);
 305   2      
 306   2              S2CON &= ~(1<<7);   // 8位数据, 1位起始位, 1位停止位, 无校验
 307   2              IE2   |= 1;         //允许中断
 308   2              S2CON |= (1<<4);    //允许接收
 309   2              P_SW2 &= ~0x01; 
 310   2              P_SW2 |= 1;         //UART2 switch to: 0: P1.0 P1.1,  1: P4.6 P4.7
 311   2      
 312   2              B_TX2_Busy = 0;
 313   2              TX2_Cnt = 0;
 314   2              RX2_Cnt = 0;
 315   2          }
 316   1      }
 317          
 318          
 319          //========================================================================
 320          // 函数: void UART1_int (void) interrupt UART1_VECTOR
 321          // 描述: UART1中断函数。
 322          // 参数: nine.
 323          // 返回: none.
 324          // 版本: VER1.0
 325          // 日期: 2014-11-28
 326          // 备注: 
 327          //========================================================================
 328          void UART1_int (void) interrupt 4
 329          {
 330   1          if(RI)
 331   1          {
 332   2              RI = 0;
 333   2              RX1_Buffer[RX1_Cnt] = SBUF;
 334   2              if(++RX1_Cnt >= UART1_BUF_LENGTH)   RX1_Cnt = 0;
 335   2          }
 336   1      
 337   1          if(TI)
 338   1          {
 339   2              TI = 0;
 340   2              B_TX1_Busy = 0;
 341   2          }
 342   1      }
 343          
 344          //========================================================================
 345          // 函数: void UART2_int (void) interrupt UART2_VECTOR
 346          // 描述: UART2中断函数。
 347          // 参数: nine.
 348          // 返回: none.
 349          // 版本: VER1.0
 350          // 日期: 2014-11-28
 351          // 备注: 
 352          //========================================================================
 353          void UART2_int (void) interrupt 8
 354          {
 355   1          if((S2CON & 1) != 0)
 356   1          {
 357   2              S2CON &= ~1;    //Clear Rx flag
 358   2              RX2_Buffer[RX2_Cnt] = S2BUF;
 359   2              if(++RX2_Cnt >= UART2_BUF_LENGTH)   RX2_Cnt = 0;
 360   2          }
 361   1      
 362   1          if((S2CON & 2) != 0)
 363   1          {
C51 COMPILER V9.59.0.0   UART1_UART2                                                       03/16/2021 10:52:38 PAGE 7   

 364   2              S2CON &= ~2;    //Clear Tx flag
 365   2              B_TX2_Busy = 0;
 366   2          }
 367   1      
 368   1      }
 369          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    416    ----
   CONSTANT SIZE    =     70    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =     64    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
