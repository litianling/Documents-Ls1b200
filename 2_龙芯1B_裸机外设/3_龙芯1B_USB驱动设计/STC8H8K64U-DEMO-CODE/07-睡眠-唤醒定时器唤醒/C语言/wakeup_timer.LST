C51 COMPILER V9.59.0.0   WAKEUP_TIMER                                                      03/09/2021 15:52:14 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE WAKEUP_TIMER
OBJECT MODULE PLACED IN wakeup_timer.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE wakeup_timer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          /*************  本程序功能说明  **************
  15          
  16          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  17          
  18          用STC的MCU的IO方式驱动8位数码管。
  19          
  20          下载时, 选择时钟 24MHZ (用户可自行修改频率).
  21          
  22          显示效果为: 上电后显示+2秒计数, 然后睡眠2秒, 醒来再+2秒,一直重复.
  23          
  24          ******************************************/
  25          #include    "reg51.h"       //包含此头文件后，里面声明的寄存器不需要再手动输入，避免重复定义
  26          #include    "intrins.h"
  27          
  28          #define MAIN_Fosc       24000000L   //定义主时钟
  29          
  30          
  31          typedef     unsigned char   u8;
  32          typedef     unsigned int    u16;
  33          typedef     unsigned long   u32;
  34          
  35          //手动输入声明"reg51.h"头文件里面没有定义的寄存器
  36          sfr WKTCL = 0xAA;   //唤醒定时器低字节
  37          sfr WKTCH = 0xAB;   //唤醒定时器高字节
  38          
  39          sfr P4   = 0xC0;
  40          sfr P5   = 0xC8;
  41          sfr P6   = 0xE8;
  42          sfr P7   = 0xF8;
  43          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  44          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  45          sfr P0M1 = 0x93;
  46          sfr P0M0 = 0x94;
  47          sfr P2M1 = 0x95;
  48          sfr P2M0 = 0x96;
  49          sfr P3M1 = 0xB1;
  50          sfr P3M0 = 0xB2;
  51          sfr P4M1 = 0xB3;
  52          sfr P4M0 = 0xB4;
  53          sfr P5M1 = 0xC9;
  54          sfr P5M0 = 0xCA;
  55          sfr P6M1 = 0xCB;
C51 COMPILER V9.59.0.0   WAKEUP_TIMER                                                      03/09/2021 15:52:14 PAGE 2   

  56          sfr P6M0 = 0xCC;
  57          sfr P7M1 = 0xE1;
  58          sfr P7M0 = 0xE2;
  59          
  60          sbit P00 = P0^0;
  61          sbit P01 = P0^1;
  62          sbit P02 = P0^2;
  63          sbit P03 = P0^3;
  64          sbit P04 = P0^4;
  65          sbit P05 = P0^5;
  66          sbit P06 = P0^6;
  67          sbit P07 = P0^7;
  68          sbit P10 = P1^0;
  69          sbit P11 = P1^1;
  70          sbit P12 = P1^2;
  71          sbit P13 = P1^3;
  72          sbit P14 = P1^4;
  73          sbit P15 = P1^5;
  74          sbit P16 = P1^6;
  75          sbit P17 = P1^7;
  76          sbit P20 = P2^0;
  77          sbit P21 = P2^1;
  78          sbit P22 = P2^2;
  79          sbit P23 = P2^3;
  80          sbit P24 = P2^4;
  81          sbit P25 = P2^5;
  82          sbit P26 = P2^6;
  83          sbit P27 = P2^7;
  84          sbit P30 = P3^0;
  85          sbit P31 = P3^1;
  86          sbit P32 = P3^2;
  87          sbit P33 = P3^3;
  88          sbit P34 = P3^4;
  89          sbit P35 = P3^5;
  90          sbit P36 = P3^6;
  91          sbit P37 = P3^7;
  92          sbit P40 = P4^0;
  93          sbit P41 = P4^1;
  94          sbit P42 = P4^2;
  95          sbit P43 = P4^3;
  96          sbit P44 = P4^4;
  97          sbit P45 = P4^5;
  98          sbit P46 = P4^6;
  99          sbit P47 = P4^7;
 100          sbit P50 = P5^0;
 101          sbit P51 = P5^1;
 102          sbit P52 = P5^2;
 103          sbit P53 = P5^3;
 104          sbit P54 = P5^4;
 105          sbit P55 = P5^5;
 106          sbit P56 = P5^6;
 107          sbit P57 = P5^7;
 108          
 109          
 110          #define DIS_DOT     0x20
 111          #define DIS_BLACK   0x10
 112          #define DIS_        0x11
 113          
 114          /****************************** 用户定义宏 ***********************************/
 115          
 116          #define     Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer 0 中断频率, 1000次/秒
 117          
C51 COMPILER V9.59.0.0   WAKEUP_TIMER                                                      03/09/2021 15:52:14 PAGE 3   

 118          /*****************************************************************************/
 119          
 120          
 121          /*************  本地常量声明    **************/
 122          u8 code t_display[]={                       //标准字库
 123          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
 124              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
 125          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
 126              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
 127              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
 128          
 129          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};      //位码
 130          
 131          
 132          /*************  本地变量声明    **************/
 133          
 134          u8  LED8[8];        //显示缓冲
 135          u8  display_index;  //显示位索引
 136          u16 msecond;        //1000ms计数
 137          
 138          u8  Test_cnt;   //测试用的秒计数变量
 139          u8  SleepDelay; //唤醒后再进入睡眠所延时的时间
 140          
 141          void    delay_ms(u8 ms);
 142          void    DisplayScan(void);
 143          void    SetWakeUpTime(u16 SetTime);
 144          
 145          /********************** 主函数 ************************/
 146          void main(void)
 147          {
 148   1          u8  i;
 149   1          
 150   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
 151   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
 152   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
 153   1          P3M1 = 0;   P3M0 = 0;   //设置为准双向口
 154   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
 155   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
 156   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
 157   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
 158   1      
 159   1          display_index = 0;
 160   1          for(i=0; i<8; i++)  LED8[i] = DIS_BLACK;    //全部消隐
 161   1          
 162   1          Test_cnt = 0;   //秒计数范围为0~255
 163   1          SleepDelay = 0;
 164   1          LED8[5] = 0;
 165   1          LED8[6] = 0;
 166   1          LED8[7] = Test_cnt;
 167   1          
 168   1          EA = 1;     //允许总中断
 169   1      
 170   1          while(1)
 171   1          {
 172   2              delay_ms(1);    //延时1ms
 173   2              DisplayScan();
 174   2              
 175   2              if(++msecond >= 1000)   //1秒到
 176   2              {
 177   3                  msecond = 0;        //清1000ms计数
 178   3                  Test_cnt++;         //秒计数+1
 179   3                  LED8[5] = Test_cnt / 100;
C51 COMPILER V9.59.0.0   WAKEUP_TIMER                                                      03/09/2021 15:52:14 PAGE 4   

 180   3                  LED8[6] = (Test_cnt % 100) / 10;
 181   3                  LED8[7] = Test_cnt % 10;
 182   3      
 183   3                  if(++SleepDelay >= 2)   //2秒后睡眠
 184   3                  {
 185   4                      SleepDelay = 0;
 186   4      
 187   4                      P7 = 0xff;     //先关闭显示，省电               
 188   4                      SetWakeUpTime(2000);    //2秒后醒来
 189   4      
 190   4                      PCON |= 0x02;   //Sleep
 191   4                      _nop_();
 192   4                      _nop_();
 193   4                      _nop_();
 194   4                      _nop_();
 195   4                      _nop_();
 196   4                      _nop_();
 197   4                      _nop_();
 198   4                  }
 199   3              }
 200   2          }
 201   1      } 
 202          /**********************************************/
 203          
 204          
 205          //========================================================================
 206          // 函数: void   SetWakeUpTime(u16 SetTime)
 207          // 描述: 唤醒定时器设置时间值函数。
 208          // 参数: SetTime: 要设置的时间值(睡眠的时间), 单位为ms.
 209          // 返回: none.
 210          // 版本: VER1.0
 211          // 日期: 2014-7-15
 212          // 备注: 
 213          //========================================================================
 214          void    SetWakeUpTime(u16 SetTime)
 215          {
 216   1          SetTime = (u16)((32768UL * (u32)SetTime) / 16000);  //重装值 = Fwkt/16 * SetTime/1000 = Fwkt * SetTime
             - / 16000
 217   1          if(SetTime > 0) SetTime--;
 218   1          WKTCL = (u8)SetTime;
 219   1          WKTCH = (u8)(SetTime >> 8) | 0x80;
 220   1      }
 221          
 222          //========================================================================
 223          // 函数: void delay_ms(u8 ms)
 224          // 描述: 延时函数。
 225          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
 226          // 返回: none.
 227          // 版本: VER1.0
 228          // 日期: 2021-3-9
 229          // 备注: 
 230          //========================================================================
 231          void delay_ms(u8 ms)
 232          {
 233   1           u16 i;
 234   1           do{
 235   2                i = MAIN_Fosc / 10000;
 236   2                while(--i);   //10T per loop
 237   2           }while(--ms);
 238   1      }
 239          
 240          /********************** 显示扫描函数 ************************/
C51 COMPILER V9.59.0.0   WAKEUP_TIMER                                                      03/09/2021 15:52:14 PAGE 5   

 241          void DisplayScan(void)
 242          {
 243   1          P7 = ~T_COM[7-display_index];
 244   1          P6 = ~t_display[LED8[display_index]];
 245   1          if(++display_index >= 8)    display_index = 0;  //8位结束回0
 246   1      }
 247          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
