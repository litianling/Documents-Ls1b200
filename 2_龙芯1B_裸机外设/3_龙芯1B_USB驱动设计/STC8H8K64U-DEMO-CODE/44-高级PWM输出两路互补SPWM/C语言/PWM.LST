C51 COMPILER V9.59.0.0   PWM                                                               02/08/2021 11:20:17 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN PWM.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE PWM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          /*************  ¹¦ÄÜËµÃ÷    **************
  15          
  16          ±¾Àý³Ì»ùÓÚSTC8H8K64UÎªÖ÷¿ØÐ¾Æ¬µÄÊµÑéÏä8½øÐÐ±àÐ´²âÊÔ£¬STC8HÏµÁÐÐ¾Æ¬¿ÉÍ¨ÓÃ²Î¿¼.
  17          
  18          ¸ß¼¶PWM¶¨Ê±Æ÷ PWM1P/PWM1N,PWM2P/PWM2N,PWM3P/PWM3N,PWM4P/PWM4N Ã¿¸öÍ¨µÀ¶¼¿É¶ÀÁ¢ÊµÏÖPWMÊä³ö£¬»òÕßÁ½Á½»¥²¹¶Ô³
             -ÆÊä³ö.
  19          
  20          ÑÝÊ¾Ê¹ÓÃPWM1P,PWM1N²úÉú»¥²¹µÄSPWM.
  21          
  22          Ö÷Ê±ÖÓÑ¡Ôñ24MHZ, PWMÊ±ÖÓÑ¡Ôñ1T, PWMÖÜÆÚ2400, ËÀÇø12¸öÊ±ÖÓ(0.5us).ÕýÏÒ²¨±íÓÃ200µã. 
  23          
  24          Êä³öÕýÏÒ²¨ÆµÂÊ = 24000000 / 2400 / 200 = 50 HZ.
  25          
  26          ±¾³ÌÐò½ö½öÊÇÒ»¸öSPWMµÄÑÝÊ¾³ÌÐò, ÓÃ»§¿ÉÒÔÍ¨¹ýÉÏÃæµÄ¼ÆËã·½·¨ÐÞ¸ÄPWMÖÜÆÚºÍÕýÏÒ²¨µÄµãÊýºÍ·ù¶È.
  27          
  28          ±¾³ÌÐòÊä³öÆµÂÊ¹Ì¶¨, Èç¹ûÐèÒª±äÆµ, ÇëÓÃ»§×Ô¼ºÉè¼Æ±äÆµ·½°¸.
  29          
  30          ±¾³ÌÐò´ÓP6.0(PWM1P)Êä³öÕýÏàÂö³å, ´ÓP6.1(PWM1N)Êä³ö·´ÏàÂö³å(»¥²¹).
  31          
  32          ******************************************/
  33          
  34          #include    "reg51.h"       //°üº¬´ËÍ·ÎÄ¼þºó£¬ÀïÃæÉùÃ÷µÄ¼Ä´æÆ÷²»ÐèÒªÔÙÊÖ¶¯ÊäÈë£¬±ÜÃâÖØ¸´¶¨Òå
  35          #include    "intrins.h"
  36          #include    "T_SineTable.h"
  37          
  38          #define     MAIN_Fosc       24000000L   //¶¨ÒåÖ÷Ê±ÖÓ
  39          
  40          typedef     unsigned char   u8;
  41          typedef     unsigned int    u16;
  42          typedef     unsigned long   u32;
  43          
  44          //ÊÖ¶¯ÊäÈëÉùÃ÷"reg51.h"Í·ÎÄ¼þÀïÃæÃ»ÓÐ¶¨ÒåµÄ¼Ä´æÆ÷
  45          sfr TH2  = 0xD6;
  46          sfr TL2  = 0xD7;
  47          sfr IE2  = 0xAF;
  48          sfr INT_CLKO = 0x8F;
  49          sfr AUXR = 0x8E;
  50          sfr P_SW1 = 0xA2;
  51          sfr P_SW2 = 0xBA;
  52          
  53          sfr P4   = 0xC0;
  54          sfr P5   = 0xC8;
C51 COMPILER V9.59.0.0   PWM                                                               02/08/2021 11:20:17 PAGE 2   

  55          sfr P6   = 0xE8;
  56          sfr P7   = 0xF8;
  57          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  58          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  59          sfr P0M1 = 0x93;
  60          sfr P0M0 = 0x94;
  61          sfr P2M1 = 0x95;
  62          sfr P2M0 = 0x96;
  63          sfr P3M1 = 0xB1;
  64          sfr P3M0 = 0xB2;
  65          sfr P4M1 = 0xB3;
  66          sfr P4M0 = 0xB4;
  67          sfr P5M1 = 0xC9;
  68          sfr P5M0 = 0xCA;
  69          sfr P6M1 = 0xCB;
  70          sfr P6M0 = 0xCC;
  71          sfr P7M1 = 0xE1;
  72          sfr P7M0 = 0xE2;
  73          
  74          sbit P00 = P0^0;
  75          sbit P01 = P0^1;
  76          sbit P02 = P0^2;
  77          sbit P03 = P0^3;
  78          sbit P04 = P0^4;
  79          sbit P05 = P0^5;
  80          sbit P06 = P0^6;
  81          sbit P07 = P0^7;
  82          sbit P10 = P1^0;
  83          sbit P11 = P1^1;
  84          sbit P12 = P1^2;
  85          sbit P13 = P1^3;
  86          sbit P14 = P1^4;
  87          sbit P15 = P1^5;
  88          sbit P16 = P1^6;
  89          sbit P17 = P1^7;
  90          sbit P20 = P2^0;
  91          sbit P21 = P2^1;
  92          sbit P22 = P2^2;
  93          sbit P23 = P2^3;
  94          sbit P24 = P2^4;
  95          sbit P25 = P2^5;
  96          sbit P26 = P2^6;
  97          sbit P27 = P2^7;
  98          sbit P30 = P3^0;
  99          sbit P31 = P3^1;
 100          sbit P32 = P3^2;
 101          sbit P33 = P3^3;
 102          sbit P34 = P3^4;
 103          sbit P35 = P3^5;
 104          sbit P36 = P3^6;
 105          sbit P37 = P3^7;
 106          sbit P40 = P4^0;
 107          sbit P41 = P4^1;
 108          sbit P42 = P4^2;
 109          sbit P43 = P4^3;
 110          sbit P44 = P4^4;
 111          sbit P45 = P4^5;
 112          sbit P46 = P4^6;
 113          sbit P47 = P4^7;
 114          sbit P50 = P5^0;
 115          sbit P51 = P5^1;
 116          sbit P52 = P5^2;
C51 COMPILER V9.59.0.0   PWM                                                               02/08/2021 11:20:17 PAGE 3   

 117          sbit P53 = P5^3;
 118          sbit P54 = P5^4;
 119          sbit P55 = P5^5;
 120          sbit P56 = P5^6;
 121          sbit P57 = P5^7;
 122          
 123          /****************************** ÓÃ»§¶¨Òåºê ***********************************/
 124          
 125          #define PWMA_ENO     (*(unsigned char  volatile xdata *)  0xFEB1)
 126          #define PWMA_PS      (*(unsigned char  volatile xdata *)  0xFEB2)
 127          
 128          #define PWMA_CR1     (*(unsigned char  volatile xdata *)  0xFEC0)
 129          #define PWMA_CR2     (*(unsigned char  volatile xdata *)  0xFEC1)
 130          #define PWMA_SMCR    (*(unsigned char  volatile xdata *)  0xFEC2) 
 131          #define PWMA_ETR     (*(unsigned char  volatile xdata *)  0xFEC3) 
 132          #define PWMA_IER     (*(unsigned char  volatile xdata *)  0xFEC4) 
 133          #define PWMA_SR1     (*(unsigned char  volatile xdata *)  0xFEC5) 
 134          #define PWMA_SR2     (*(unsigned char  volatile xdata *)  0xFEC6) 
 135          #define PWMA_EGR     (*(unsigned char  volatile xdata *)  0xFEC7) 
 136          #define PWMA_CCMR1   (*(unsigned char  volatile xdata *)  0xFEC8) 
 137          #define PWMA_CCMR2   (*(unsigned char  volatile xdata *)  0xFEC9)
 138          #define PWMA_CCMR3   (*(unsigned char  volatile xdata *)  0xFECA)
 139          #define PWMA_CCMR4   (*(unsigned char  volatile xdata *)  0xFECB)
 140          #define PWMA_CCER1   (*(unsigned char  volatile xdata *)  0xFECC)
 141          #define PWMA_CCER2   (*(unsigned char  volatile xdata *)  0xFECD)
 142          #define PWMA_CNTRH   (*(unsigned char  volatile xdata *)  0xFECE)
 143          #define PWMA_CNTRL   (*(unsigned char  volatile xdata *)  0xFECF)
 144          #define PWMA_PSCRH   (*(unsigned char  volatile xdata *)  0xFED0)
 145          #define PWMA_PSCRL   (*(unsigned char  volatile xdata *)  0xFED1)
 146          #define PWMA_ARRH    (*(unsigned char  volatile xdata *)  0xFED2)
 147          #define PWMA_ARRL    (*(unsigned char  volatile xdata *)  0xFED3)
 148          #define PWMA_RCR     (*(unsigned char  volatile xdata *)  0xFED4)
 149          #define PWMA_CCR1H   (*(unsigned char  volatile xdata *)  0xFED5)
 150          #define PWMA_CCR1L   (*(unsigned char  volatile xdata *)  0xFED6)
 151          #define PWMA_CCR2H   (*(unsigned char  volatile xdata *)  0xFED7)
 152          #define PWMA_CCR2L   (*(unsigned char  volatile xdata *)  0xFED8)
 153          #define PWMA_CCR3H   (*(unsigned char  volatile xdata *)  0xFED9)
 154          #define PWMA_CCR3L   (*(unsigned char  volatile xdata *)  0xFEDA)
 155          #define PWMA_CCR4H   (*(unsigned char  volatile xdata *)  0xFEDB)
 156          #define PWMA_CCR4L   (*(unsigned char  volatile xdata *)  0xFEDC)
 157          #define PWMA_BKR     (*(unsigned char  volatile xdata *)  0xFEDD)
 158          #define PWMA_DTR     (*(unsigned char  volatile xdata *)  0xFEDE)
 159          #define PWMA_OISR    (*(unsigned char  volatile xdata *)  0xFEDF)
 160          
 161          /*****************************************************************************/
 162          
 163          #define PWM1_1      0x00  //P:P1.0  N:P1.1
 164          #define PWM1_2      0x01  //P:P2.0  N:P2.1
 165          #define PWM1_3      0x02  //P:P6.0  N:P6.1
 166          
 167          #define PWM2_1      0x00  //P:P1.2/P5.4  N:P1.3
 168          #define PWM2_2      0x04  //P:P2.2  N:P2.3
 169          #define PWM2_3      0x08  //P:P6.2  N:P6.3
 170          
 171          #define PWM3_1      0x00  //P:P1.4  N:P1.5
 172          #define PWM3_2      0x10  //P:P2.4  N:P2.5
 173          #define PWM3_3      0x20  //P:P6.4  N:P6.5
 174          
 175          #define PWM4_1      0x00  //P:P1.6  N:P1.7
 176          #define PWM4_2      0x40  //P:P2.6  N:P2.7
 177          #define PWM4_3      0x80  //P:P6.6  N:P6.7
 178          #define PWM4_4      0xC0  //P:P3.4  N:P3.3
C51 COMPILER V9.59.0.0   PWM                                                               02/08/2021 11:20:17 PAGE 4   

 179          
 180          #define ENO1P       0x01
 181          #define ENO1N       0x02
 182          #define ENO2P       0x04
 183          #define ENO2N       0x08
 184          #define ENO3P       0x10
 185          #define ENO3N       0x20
 186          #define ENO4P       0x40
 187          #define ENO4N       0x80
 188          
 189          /*************  ±¾µØ±äÁ¿ÉùÃ÷    **************/
 190          
 191          u16 PWM1_Duty;
 192          u8  PWM_Index;  //SPWM²é±íË÷Òý
 193          
 194          /******************** Ö÷º¯Êý **************************/
 195          void main(void)
 196          {
 197   1          P0M1 = 0;   P0M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 198   1          P1M1 = 0;   P1M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 199   1          P2M1 = 0;   P2M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 200   1          P3M1 = 0;   P3M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 201   1          P4M1 = 0;   P4M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 202   1          P5M1 = 0;   P5M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 203   1          P6M1 = 0;   P6M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 204   1          P7M1 = 0;   P7M0 = 0;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
 205   1      
 206   1          PWM1_Duty = 1220;
 207   1      
 208   1          P_SW2 |= 0x80;
 209   1        
 210   1          PWMA_CCER1 = 0x00; //Ð´ CCMRx Ç°±ØÐëÏÈÇåÁã CCxE ¹Ø±ÕÍ¨µÀ
 211   1          PWMA_CCER2 = 0x00;
 212   1          PWMA_CCMR1 = 0x60; //Í¨µÀÄ£Ê½ÅäÖÃ
 213   1      //    PWMA_CCMR2 = 0x60;
 214   1      //    PWMA_CCMR3 = 0x60;
 215   1      //    PWMA_CCMR4 = 0x60;
 216   1          PWMA_CCER1 = 0x05; //ÅäÖÃÍ¨µÀÊä³öÊ¹ÄÜºÍ¼«ÐÔ
 217   1      //    PWMA_CCER2 = 0x55;
 218   1      
 219   1          PWMA_ARRH = 0x09; //ÉèÖÃÖÜÆÚÊ±¼ä
 220   1          PWMA_ARRL = 0x60;
 221   1      
 222   1          PWMA_CCR1H = (u8)(PWM1_Duty >> 8); //ÉèÖÃÕ¼¿Õ±ÈÊ±¼ä
 223   1          PWMA_CCR1L = (u8)(PWM1_Duty);
 224   1      
 225   1          PWMA_DTR = 0x0C;   //ÉèÖÃËÀÇøÊ±¼ä
 226   1      
 227   1          PWMA_ENO = 0x00;
 228   1          PWMA_ENO |= ENO1P; //Ê¹ÄÜÊä³ö
 229   1          PWMA_ENO |= ENO1N; //Ê¹ÄÜÊä³ö
 230   1      //    PWMA_ENO |= ENO2P; //Ê¹ÄÜÊä³ö
 231   1      //    PWMA_ENO |= ENO2N; //Ê¹ÄÜÊä³ö
 232   1      //    PWMA_ENO |= ENO3P; //Ê¹ÄÜÊä³ö
 233   1      //    PWMA_ENO |= ENO3N; //Ê¹ÄÜÊä³ö
 234   1      //    PWMA_ENO |= ENO4P; //Ê¹ÄÜÊä³ö
 235   1      //    PWMA_ENO |= ENO4N; //Ê¹ÄÜÊä³ö
 236   1      
 237   1          PWMA_PS = 0x00;  //¸ß¼¶ PWM Í¨µÀÊä³ö½ÅÑ¡ÔñÎ»
 238   1          PWMA_PS |= PWM1_3; //Ñ¡Ôñ PWM1_3 Í¨µÀ
 239   1      //    PWMA_PS |= PWM2_3; //Ñ¡Ôñ PWM2_3 Í¨µÀ
 240   1      //    PWMA_PS |= PWM3_3; //Ñ¡Ôñ PWM3_3 Í¨µÀ
C51 COMPILER V9.59.0.0   PWM                                                               02/08/2021 11:20:17 PAGE 5   

 241   1      //    PWMA_PS |= PWM4_3; //Ñ¡Ôñ PWM4_3 Í¨µÀ
 242   1      
 243   1          PWMA_BKR = 0x80; //Ê¹ÄÜÖ÷Êä³ö
 244   1          PWMA_IER = 0x01; //Ê¹ÄÜÖÐ¶Ï
 245   1          PWMA_CR1 |= 0x01; //¿ªÊ¼¼ÆÊ±
 246   1      
 247   1          P_SW2 &= 0x7f;
 248   1      
 249   1          EA = 1;     //´ò¿ª×ÜÖÐ¶Ï
 250   1      
 251   1          while (1)
 252   1          {
 253   2          }
 254   1      }
 255          
 256          /******************** ÖÐ¶Ïº¯Êý **************************/
 257          void PWMA_ISR() interrupt 26 
 258          { 
 259   1          P_SW2 |= 0x80;
 260   1          if(PWMA_SR1 & 0X01)
 261   1          {
 262   2              PWMA_SR1 &=~0X01; 
 263   2              PWM1_Duty = T_SinTable[PWM_Index];
 264   2              if(++PWM_Index >= 200)  PWM_Index = 0;
 265   2      
 266   2              PWMA_CCR1H = (u8)(PWM1_Duty >> 8); //ÉèÖÃÕ¼¿Õ±ÈÊ±¼ä
 267   2              PWMA_CCR1L = (u8)(PWM1_Duty);
 268   2          }
 269   1          PWMA_SR1 = 0;
 270   1          P_SW2 &= 0x7f;
 271   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    226    ----
   CONSTANT SIZE    =    400    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
