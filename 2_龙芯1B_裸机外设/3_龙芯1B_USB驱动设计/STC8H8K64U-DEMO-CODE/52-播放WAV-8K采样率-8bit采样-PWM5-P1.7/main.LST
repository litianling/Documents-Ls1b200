C51 COMPILER V9.59.0.0   MAIN                                                              03/15/2021 15:12:17 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #define   MAIN_Fosc   24000000L //定义主时钟
  14          #include  "STC8Hxxx.h"
  15          
  16          #include  "music-8bit-8K-wave.h"
  17          
  18          
  19          /*************  功能说明  **************
  20          
  21          使用STC8H系列MCU的PWM5_2(P1.7)播放8位WAVE语音.
  22          
  23          语音参数: 8k采样 单声道, 码率64kb/s, 时长6.4秒.
  24          
  25          
  26                              3K      3K
  27                PWM5_2(P1.7)  ___     ___    OUTPUT
  28                     --------|___|- -|___|- ------
  29                                   |       |
  30                                  ---     ---
  31                              103 ---     --- 103
  32                                   |       |
  33                                   |       |
  34                                  ===     ===
  35                                  GND     GND
  36          
  37          ******************************************/
  38          
  39          /*************  本地常量声明  **************/
  40          
  41          
  42          /*************  本地变量声明  **************/
  43          u16   play_lenth;
  44          u16   LastSample;
  45          u16   PlayCnt;
  46          u8  code *MusicPoint;
  47          bit B_Play;
  48          u8  DAC_Cnt;
  49          
  50          
  51          
  52          /*************  本地函数声明  **************/
  53          void  LoadMusic(void);
  54          void  PWM_config(void);
  55          u8    Timer0_Config(u16 reload);  //reload是重装值, 返回0正确, 返回1装载值过大错误.
C51 COMPILER V9.59.0.0   MAIN                                                              03/15/2021 15:12:17 PAGE 2   

  56          
  57          
  58          
  59          /*************  外部函数和变量声明 *****************/
  60          
  61          
  62          
  63          
  64          /******************** 主函数**************************/
  65          void main(void)
  66          {
  67   1        P0n_standard(0xff); //设置为准双向口
  68   1        P1n_standard(0xff); //设置为准双向口
  69   1        P2n_standard(0xff); //设置为准双向口
  70   1        P3n_standard(0xff); //设置为准双向口
  71   1        P4n_standard(0xff); //设置为准双向口
  72   1        P5n_standard(0xff); //设置为准双向口
  73   1      
  74   1        PWM_config(); //初始化PWM
  75   1        Timer0_Config(MAIN_Fosc / 8000);  //t=0: reload值是主时钟周期数,  (中断频率, 8000次/秒)
  76   1      
  77   1        EA = 1;     //允许全局中断
  78   1        
  79   1        
  80   1        while (1)
  81   1        {
  82   2          if(!B_Play) LoadMusic();
  83   2          NOP(10);
  84   2        }
  85   1      }
  86          
  87          
  88          //========================================================================
  89          // 函数: void LoadWave(void)
  90          // 描述: 装载一段wav
  91          // 参数: none.
  92          // 返回: none.
  93          // 版本: VER1.0
  94          // 日期: 2014-8-15
  95          // 备注: 
  96          //========================================================================
  97          void  LoadMusic(void)
  98          {
  99   1        MusicPoint = Music;
 100   1      
 101   1        play_lenth = ((u16)MusicPoint[41] << 8) + MusicPoint[40];
 102   1        MusicPoint += 44;
 103   1      
 104   1        PlayCnt = 0;
 105   1        B_Play = 1;
 106   1      }
 107          
 108          
 109          //========================================================================
 110          // 函数: void PWM_config(void)
 111          // 描述: PWM配置函数。
 112          // 参数: none.
 113          // 返回: none.
 114          // 版本: VER1.0
 115          // 日期: 2014-8-15
 116          // 备注: 
 117          //========================================================================
C51 COMPILER V9.59.0.0   MAIN                                                              03/15/2021 15:12:17 PAGE 3   

 118          void PWM_config(void)
 119          {
 120   1        P_SW2 |= 0x80;    //SFR enable   
 121   1      
 122   1        PWMB_PSCR = 0x0000; // 预分频寄存器, 分频 Fck_cnt = Fck_psc/(PSCR[15:0}+1), 边沿对齐PWM频率 = SYSclk/((PS
             -CR+1)*(AAR+1)), 中央对齐PWM频率 = SYSclk/((PSCR+1)*(AAR+1)*2).
 123   1        PWMB_DTR  = 00;   // 死区时间配置,   n=0~127: DTR= n T,   0x80 ~(0x80+n), n=0~63: DTR=(64+n)*2T,  
 124   1                  // 对PWMB没有意义  0xc0 ~(0xc0+n), n=0~31: DTR=(32+n)*8T,   0xE0 ~(0xE0+n), n=0~31: DTR=(32+n)*16T,
 125   1        PWMB_ARR = 256;   // 自动重装载寄存器, 控制PWM周期
 126   1      
 127   1        PWMB_CCMR1 = 0x68;  // 通道模式配置, PWM模式1, 预装载允许
 128   1        PWMB_CCR1 = 128;  // 计数器比较值, 控制占空比
 129   1        PWMB_CCER1 = 0x01;  // 配置通道输出使能和极性 PWM6 PWM5
 130   1      
 131   1        PWMB_BKR = 0x80;  // 主输出使能 相当于总开关
 132   1        PWMB_IER = 0x00;  // 使能中断
 133   1        PWMB_CR1 = 0x81;  // 使能计数器, 允许自动重装载寄存器缓冲, 边沿对齐模式, 向上计数, bit7=1:写自动重装载寄存
             -器缓冲(本周期不会被打扰), =0:直接写自动重装载寄存器
 134   1        
 135   1      
 136   1        PWMB_ENO  = 0x01; //IO输出PWM允许, bit6: ENO8P,  bit4: ENO7P,  bit2: ENO6P,  bit0: ENO5P
 137   1        PWMB_PS   = (0<<6)+(0<<4)+(0<<2)+ 1;  //选择IO, 4项从高到低(从左到右)对应PWM8 PWM7 PWM6 PWM5
 138   1      
 139   1      //  PWMA_PS    PWM8    PWM7    PWM6    PWM5
 140   1      //    00       P2.3    P2.2    P2.1    P2.0
 141   1      //    01       P3.4    P3.3    P5.4    P1.7
 142   1      //    02       P0.3    P0.2    P0.1    P0.0
 143   1      //    03       P7.7    P7.6    P7.5    P7.4
 144   1      
 145   1      //  P_SW2 &= ~0x80;   //XDATA enable   
 146   1      }
 147          
 148          
 149          //========================================================================
 150          // 函数:u8  Timer0_Config(u8 t, u32 reload)
 151          // 描述: timer0初始化函数.
 152          // 参数: reload: 重装值.
 153          // 返回: 0: 初始化正确, 1: 重装值过大, 初始化错误.
 154          // 版本: V1.0, 2018-12-20
 155          //========================================================================
 156          u8  Timer0_Config(u16 reload) //reload是重装值
 157          {
 158   1        TR0 = 0;  //停止计数
 159   1      
 160   1        if(reload >= (65536UL * 12))  return 1; //值过大, 返回错误
 161   1        if(reload < 65536UL)  AUXR |= 0x80;   //1T mode
 162   1        else
 163   1        {
 164   2          AUXR &= ~0x80;  //12T mode
 165   2          reload = reload / 12;
 166   2        }
 167   1        reload = 65536UL - reload;
 168   1        TH0 = (u8)(reload >> 8);
 169   1        TL0 = (u8)(reload);
 170   1      
 171   1        ET0 = 1;  //允许中断
 172   1      //  PT0 = 1;  //高优先级中断
 173   1        TMOD = (TMOD & ~0x03) | 0;  //工作模式, 0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3: 16位自动重装
             -, 不可屏蔽中断
 174   1      //  TMOD |=  0x04;  //对外计数或分频
 175   1      //  INT_CLKO |=  0x01;  //输出时钟
 176   1        TR0 = 1;  //开始运行
C51 COMPILER V9.59.0.0   MAIN                                                              03/15/2021 15:12:17 PAGE 4   

 177   1        return 0;
 178   1      }
 179          
 180          //========================================================================
 181          // 函数: void timer0_int (void) interrupt TIMER0_VECTOR
 182          // 描述:  timer0中断函数.
 183          // 参数: none.
 184          // 返回: none.
 185          // 版本: V1.0, 2018-12-20
 186          //========================================================================
 187          void timer0_ISR (void) interrupt TIMER0_VECTOR
 188          {
 189   1        if(B_Play)
 190   1        {
 191   2          PWMB_CCR1L = *MusicPoint; //8位无符号wav数据送PWM占空比
 192   2          MusicPoint++; //指向下一个数据
 193   2          if(++PlayCnt >= play_lenth) B_Play = 0;
 194   2        }
 195   1      }
 196          
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =  51145    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
