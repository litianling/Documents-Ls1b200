A51 MACRO ASSEMBLER  UART4                                                                03/01/2021 13:29:23 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN UART4.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE UART4.asm SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;/*---------------------------------------------------------------------*/
                       2     ;/* --- STC MCU Limited ------------------------------------------------*/
                       3     ;/* --- STC 1T Series MCU Demo Programme -------------------------------*/
                       4     ;/* --- Mobile: (86)13922805190 ----------------------------------------*/
                       5     ;/* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
                       6     ;/* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
                       7     ;/* --- Web: www.STCMCU.com --------------------------------------------*/
                       8     ;/* --- Web: www.STCMCUDATA.com ----------------------------------------*/
                       9     ;/* --- QQ:  800003751 -------------------------------------------------*/
                      10     ;/* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
                      11     ;/*---------------------------------------------------------------------*/
                      12     
                      13     ;/************* 功能说明    **************
                      14     
                      15     ;本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
                      16     
                      17     ;串口4全双工中断方式收发通讯程序.
                      18     
                      19     ;串口设置为：115200,8,n,1.
                      20     
                      21     ;通过PC向MCU发送数据, MCU收到后通过串口把收到的数据原样返回.
                      22     
                      23     ;下载时, 选择时钟 22.1184MHz，如要改变, 请修改下面的"定义主时钟"的值并重新编译.
                      24     
                      25     ;******************************************/
                      26     
                      27     ;/****************************** 用户定义宏 ***********************************/
                      28     
                      29     ;UART4_Baudrate EQU     (-4608) ;   600bps @ 11.0592MHz
                      30     ;UART4_Baudrate EQU     (-2304) ;  1200bps @ 11.0592MHz UART4_Baudrate = 65536UL - ((MAIN_F
                             osc / 4) / Baudrate)
                      31     ;UART4_Baudrate EQU     (-1152) ;  2400bps @ 11.0592MHz
                      32     ;UART4_Baudrate EQU     (-576)  ;  4800bps @ 11.0592MHz
                      33     ;UART4_Baudrate EQU     (-288)  ;  9600bps @ 11.0592MHz
                      34     ;UART4_Baudrate EQU     (-144)  ; 19200bps @ 11.0592MHz
                      35     ;UART4_Baudrate EQU     (-72)   ; 38400bps @ 11.0592MHz
                      36     ;UART4_Baudrate EQU     (-48)   ; 57600bps @ 11.0592MHz
                      37     ;UART4_Baudrate EQU      (-24)   ;115200bps @ 11.0592MHz
                      38     
                      39     ;UART4_Baudrate EQU     (-7680) ;   600bps @ 18.432MHz
                      40     ;UART4_Baudrate EQU     (-3840) ;  1200bps @ 18.432MHz
                      41     ;UART4_Baudrate EQU     (-1920) ;  2400bps @ 18.432MHz
                      42     ;UART4_Baudrate EQU     (-960)  ;  4800bps @ 18.432MHz
                      43     ;UART4_Baudrate EQU     (-480)  ;  9600bps @ 18.432MHz
                      44     ;UART4_Baudrate EQU     (-240)  ; 19200bps @ 18.432MHz
                      45     ;UART4_Baudrate EQU     (-120)  ; 38400bps @ 18.432MHz
                      46     ;UART4_Baudrate EQU     (-80)   ; 57600bps @ 18.432MHz
                      47     ;UART4_Baudrate EQU     (-40)   ;115200bps @ 18.432MHz
                      48     
                      49     ;UART4_Baudrate EQU     (-9216) ;   600bps @ 22.1184MHz
                      50     ;UART4_Baudrate EQU     (-4608) ;  1200bps @ 22.1184MHz
                      51     ;UART4_Baudrate EQU     (-2304) ;  2400bps @ 22.1184MHz
                      52     ;UART4_Baudrate EQU     (-1152) ;  4800bps @ 22.1184MHz
                      53     ;UART4_Baudrate EQU     (-576)  ;  9600bps @ 22.1184MHz
                      54     ;UART4_Baudrate EQU     (-288)  ; 19200bps @ 22.1184MHz
                      55     ;UART4_Baudrate EQU     (-144)  ; 38400bps @ 22.1184MHz
                      56     ;UART4_Baudrate EQU     (-96)   ; 57600bps @ 22.1184MHz
  FFD0                57     UART4_Baudrate  EQU    (-48)   ;115200bps @ 22.1184MHz
A51 MACRO ASSEMBLER  UART4                                                                03/01/2021 13:29:23 PAGE     2

                      58     
                      59     ;UART4_Baudrate EQU     (-6912) ; 1200bps @ 33.1776MHz
                      60     ;UART4_Baudrate EQU     (-3456) ; 2400bps @ 33.1776MHz
                      61     ;UART4_Baudrate EQU     (-1728) ; 4800bps @ 33.1776MHz
                      62     ;UART4_Baudrate EQU     (-864)  ; 9600bps @ 33.1776MHz
                      63     ;UART4_Baudrate EQU     (-432)  ;19200bps @ 33.1776MHz
                      64     ;UART4_Baudrate EQU     (-216)  ;38400bps @ 33.1776MHz
                      65     ;UART4_Baudrate EQU     (-144)  ;57600bps @ 33.1776MHz
                      66     ;UART4_Baudrate EQU     (-72)   ;115200bps @ 33.1776MHz
                      67     
                      68     
                      69     ;*******************************************************************
                      70     ;*******************************************************************
  0093                71     P0M1    DATA    0x93    ; P0M1.n,P0M0.n     =00--->Standard,    01--->push-pull
  0094                72     P0M0    DATA    0x94    ;                   =10--->pure input,  11--->open drain
  0091                73     P1M1    DATA    0x91    ; P1M1.n,P1M0.n     =00--->Standard,    01--->push-pull
  0092                74     P1M0    DATA    0x92    ;                   =10--->pure input,  11--->open drain
  0095                75     P2M1    DATA    0x95    ; P2M1.n,P2M0.n     =00--->Standard,    01--->push-pull
  0096                76     P2M0    DATA    0x96    ;                   =10--->pure input,  11--->open drain
  00B1                77     P3M1    DATA    0xB1    ; P3M1.n,P3M0.n     =00--->Standard,    01--->push-pull
  00B2                78     P3M0    DATA    0xB2    ;                   =10--->pure input,  11--->open drain
  00B3                79     P4M1    DATA    0xB3    ; P4M1.n,P4M0.n     =00--->Standard,    01--->push-pull
  00B4                80     P4M0    DATA    0xB4    ;                   =10--->pure input,  11--->open drain
  00C9                81     P5M1    DATA    0xC9    ; P5M1.n,P5M0.n     =00--->Standard,    01--->push-pull
  00CA                82     P5M0    DATA    0xCA    ;                   =10--->pure input,  11--->open drain
  00CB                83     P6M1    DATA    0xCB    ; P6M1.n,P6M0.n     =00--->Standard,    01--->push-pull
  00CC                84     P6M0    DATA    0xCC    ;                   =10--->pure input,  11--->open drain
  00E1                85     P7M1    DATA    0xE1    ;
  00E2                86     P7M0    DATA    0xE2    ;
                      87     
                      88     
  008F                89     INT_CLKO    DATA    0x8F
  00A2                90     P_SW1       DATA    0A2H
  00BA                91     P_SW2       DATA    0BAH
  00AF                92     IE2         DATA    0AFH
  008E                93     AUXR        DATA    08EH
  00D6                94     T2H         DATA    0D6H
  00D7                95     T2L         DATA    0D7H
  00D2                96     T4H         DATA    0D2H
  00D3                97     T4L         DATA    0D3H
  00D1                98     T4T3M       DATA    0D1H
                      99     
  0084               100     S4CON       DATA    084H
  0085               101     S4BUF       DATA    085H
                     102     
  0020               103     RX4_Lenth   EQU     32      ; 串口接收缓冲长度
                     104     
  0000               105     B_TX4_Busy  BIT     20H.0   ; 发送忙标志
  0030               106     TX4_Cnt     DATA    30H     ; 发送计数
  0031               107     RX4_Cnt     DATA    31H     ; 接收计数
  0040               108     RX4_Buffer  DATA    40H     ;40 ~ 5FH 接收缓冲
                     109     
  00D0               110     STACK_POIRTER   EQU     0D0H    ;堆栈开始地址
                     111     
                     112     ;*******************************************************************
                     113     ;*******************************************************************
0000                 114             ORG     0000H       ;reset
0000 020100          115             LJMP    F_Main
                     116     
0093                 117             ORG     0093H       ;18  UART4 interrupt
0093 0201BC          118             LJMP    F_UART4_Interrupt
                     119     
                     120     
                     121     ;******************** 主程序 **************************/
0100                 122             ORG     0100H       ;reset
0100                 123     F_Main:
A51 MACRO ASSEMBLER  UART4                                                                03/01/2021 13:29:23 PAGE     3

0100 E4              124         CLR     A
0101 F593            125         MOV     P0M1, A     ;设置为准双向口
0103 F594            126         MOV     P0M0, A
0105 F591            127         MOV     P1M1, A     ;设置为准双向口
0107 F592            128         MOV     P1M0, A
0109 F595            129         MOV     P2M1, A     ;设置为准双向口
010B F596            130         MOV     P2M0, A
010D F5B1            131         MOV     P3M1, A     ;设置为准双向口
010F F5B2            132         MOV     P3M0, A
0111 F5B3            133         MOV     P4M1, A     ;设置为准双向口
0113 F5B4            134         MOV     P4M0, A
0115 F5C9            135         MOV     P5M1, A     ;设置为准双向口
0117 F5CA            136         MOV     P5M0, A
0119 F5CB            137         MOV     P6M1, A     ;设置为准双向口
011B F5CC            138         MOV     P6M0, A
011D F5E1            139         MOV     P7M1, A     ;设置为准双向口
011F F5E2            140         MOV     P7M0, A
                     141     
                     142         
0121 7581D0          143         MOV     SP, #STACK_POIRTER
0124 75D000          144         MOV     PSW, #0
                     145         USING   0       ;选择第0组R0~R7
                     146     
                     147     ;================= 用户初始化程序 ====================================
0127 7401            148         MOV     A, #1
0129 120193          149         LCALL   F_UART4_config  ; 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
012C D2AF            150         SETB    EA      ; 允许全局中断
                     151         
012E 900154          152         MOV     DPTR, #TestString4  ;Load string address to DPTR
0131 12016E          153         LCALL   F_SendString4       ;Send string
                     154     
                     155     ;=================== 主循环 ==================================
0134                 156     L_MainLoop:
0134 E530            157         MOV     A, TX4_Cnt
0136 B53102          158         CJNE    A, RX4_Cnt, L_ReturnData
0139 8016            159         SJMP    L_QuitCheckRx4
013B                 160     L_ReturnData:                   ; 收到过数据
013B 200013          161         JB      B_TX4_Busy, L_QuitCheckRx4      ; 发送忙， 退出
013E D200            162         SETB    B_TX4_Busy          ; 标志发送忙
0140 7440            163         MOV     A, #RX4_Buffer
0142 2530            164         ADD     A, TX4_Cnt
0144 F8              165         MOV     R0, A
0145 8685            166         MOV     S4BUF, @R0       ; 发一个字节
0147 0530            167         INC     TX4_Cnt
0149 E530            168         MOV     A, TX4_Cnt
014B B42003          169         CJNE    A, #RX4_Lenth, L_QuitCheckRx4
014E 753000          170         MOV     TX4_Cnt, #0     ; 避免溢出处理
0151                 171     L_QuitCheckRx4:
0151 020134          172         LJMP    L_MainLoop
                     173     ;===================================================================
                     174     
                     175     
0154                 176     TestString4:                    ;Test string
0154 53544338        177         DB  "STC8H8K64U UART4 Test !",0DH,0AH,0
0158 48384B36                
015C 34552055                
0160 41525434                
0164 20546573                
0168 7420210D                
016C 0A00                    
                     178     
                     179     ;========================================================================
                     180     ; 函数: F_SendString4
                     181     ; 描述: 串口4发送字符串函数。
                     182     ; 参数: DPTR: 字符串首地址.
                     183     ; 返回: none.
A51 MACRO ASSEMBLER  UART4                                                                03/01/2021 13:29:23 PAGE     4

                     184     ; 版本: VER1.0
                     185     ; 日期: 2020-11-05
                     186     ; 备注: 
                     187     ;========================================================================
016E                 188     F_SendString4:
016E E4              189         CLR     A
016F 93              190         MOVC    A, @A+DPTR      ;Get current char
0170 600A            191         JZ      L_SendEnd4      ;Check the end of the string
0172 D200            192         SETB    B_TX4_Busy      ;标志发送忙
0174 F585            193         MOV     S4BUF, A         ;发送一个字节
0176 2000FD          194         JB      B_TX4_Busy, $   ;等待发送完成
0179 A3              195         INC     DPTR            ;increment string ptr
017A 80F2            196         SJMP    F_SendString4   ;Check next
017C                 197     L_SendEnd4:
017C 22              198         RET
                     199     
                     200     ;========================================================================
                     201     ; 函数: F_SetTimer2Baudraye
                     202     ; 描述: 设置Timer2做波特率发生器。
                     203     ; 参数: DPTR: Timer2的重装值.
                     204     ; 返回: none.
                     205     ; 版本: VER1.0
                     206     ; 日期: 2014-11-28
                     207     ; 备注: 
                     208     ;========================================================================
017D                 209     F_SetTimer2Baudraye:    ; 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
017D 538EEF          210         ANL     AUXR, #NOT (1 SHL 4)    ; Timer stop    波特率使用Timer2产生
0180 538EF7          211         ANL     AUXR, #NOT (1 SHL 3)    ; Timer2 set As Timer
0183 438E04          212         ORL     AUXR, #(1 SHL 2)        ; Timer2 set as 1T mode
0186 8583D6          213         MOV     T2H, DPH
0189 8582D7          214         MOV     T2L, DPL
018C 53AFFB          215         ANL     IE2, #NOT (1 SHL 2)     ; 禁止中断
018F 438E10          216         ORL     AUXR, #(1 SHL 4)        ; Timer run enable
0192 22              217         RET
                     218     
                     219     ;========================================================================
                     220     ; 函数: F_UART4_config
                     221     ; 描述: UART4初始化函数。
                     222     ; 参数: ACC: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer4做波特率.
                     223     ; 返回: none.
                     224     ; 版本: VER1.0
                     225     ; 日期: 2020-11-05
                     226     ; 备注: 
                     227     ;========================================================================
0193                 228     F_UART4_config:
0193 B4020B          229         CJNE    A, #2, L_Uart1NotUseTimer2
0196 438410          230         ORL     S4CON, #0x10     ; S4 BRT Use Timer2;
0199 90FFD0          231         MOV     DPTR, #UART4_Baudrate
019C 12017D          232         LCALL   F_SetTimer2Baudraye
019F 800C            233         SJMP    L_SetupUart1
                     234     
01A1                 235     L_Uart1NotUseTimer2:
01A1 758450          236         MOV     S4CON, #0x50     ; 8位数据, 使用Timer4做波特率发生器, 允许接收
01A4 75D2FF          237         MOV     T4H, #HIGH UART4_Baudrate
01A7 75D3D0          238         MOV     T4L, #LOW  UART4_Baudrate
01AA 75D1A0          239         MOV     T4T3M, #0xa0
                     240     
01AD                 241     L_SetupUart1:
01AD 53BAFB          242         ANL     P_SW2, #NOT 0x04  ; UART4 switch to P0.2 P0.3
                     243     ;    ORL     P_SW2, #0x04     ; UART4 switch to P5.2 P5.3
01B0 43AF10          244         ORL     IE2, #0x10        ; 允许UART4中断
                     245     
01B3 C200            246         CLR     B_TX4_Busy
01B5 753100          247         MOV     RX4_Cnt, #0;
01B8 753000          248         MOV     TX4_Cnt, #0;
01BB 22              249         RET
A51 MACRO ASSEMBLER  UART4                                                                03/01/2021 13:29:23 PAGE     5

                     250     
                     251     
                     252     ;========================================================================
                     253     ; 函数: F_UART4_Interrupt
                     254     ; 描述: UART4中断函数。
                     255     ; 参数: nine.
                     256     ; 返回: none.
                     257     ; 版本: VER1.0
                     258     ; 日期: 2020-11-05
                     259     ; 备注: 
                     260     ;========================================================================
01BC                 261     F_UART4_Interrupt:
01BC C0D0            262         PUSH    PSW
01BE C0E0            263         PUSH    ACC
01C0 C000            264         PUSH    AR0
                     265         
01C2 E584            266         MOV     A, S4CON
01C4 30E014          267         JNB     ACC.0, L_QuitUartRx
01C7 5384FE          268         ANL     S4CON, #NOT 1;
01CA 7440            269         MOV     A, #RX4_Buffer
01CC 2531            270         ADD     A, RX4_Cnt
01CE F8              271         MOV     R0, A
01CF A685            272         MOV     @R0, S4BUF   ;保存一个字节
01D1 0531            273         INC     RX4_Cnt
01D3 E531            274         MOV     A, RX4_Cnt
01D5 B42003          275         CJNE    A, #RX4_Lenth, L_QuitUartRx
01D8 753100          276         MOV     RX4_Cnt, #0     ; 避免溢出处理
01DB                 277     L_QuitUartRx:
                     278     
01DB E584            279         MOV     A, S4CON
01DD 30E105          280         JNB     ACC.1, L_QuitUartTx
01E0 5384FD          281         ANL     S4CON, #NOT 2;
01E3 C200            282         CLR     B_TX4_Busy      ; 清除发送忙标志
01E5                 283     L_QuitUartTx:
                     284     
01E5 D000            285         POP     AR0
01E7 D0E0            286         POP     ACC
01E9 D0D0            287         POP     PSW
01EB 32              288         RETI
                     289     
                     290         END
                             
A51 MACRO ASSEMBLER  UART4                                                                03/01/2021 13:29:23 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E              T Y P E  V A L U E   ATTRIBUTES

ACC . . . . . . . .  D ADDR   00E0H   A   
AR0 . . . . . . . .  D ADDR   0000H   A   
AUXR. . . . . . . .  D ADDR   008EH   A   
B_TX4_BUSY. . . . .  B ADDR   0020H.0 A   
DPH . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . .  B ADDR   00A8H.7 A   
F_MAIN. . . . . . .  C ADDR   0100H   A   
F_SENDSTRING4 . . .  C ADDR   016EH   A   
F_SETTIMER2BAUDRAYE  C ADDR   017DH   A   
F_UART4_CONFIG. . .  C ADDR   0193H   A   
F_UART4_INTERRUPT .  C ADDR   01BCH   A   
IE2 . . . . . . . .  D ADDR   00AFH   A   
INT_CLKO. . . . . .  D ADDR   008FH   A   
L_MAINLOOP. . . . .  C ADDR   0134H   A   
L_QUITCHECKRX4. . .  C ADDR   0151H   A   
L_QUITUARTRX. . . .  C ADDR   01DBH   A   
L_QUITUARTTX. . . .  C ADDR   01E5H   A   
L_RETURNDATA. . . .  C ADDR   013BH   A   
L_SENDEND4. . . . .  C ADDR   017CH   A   
L_SETUPUART1. . . .  C ADDR   01ADH   A   
L_UART1NOTUSETIMER2  C ADDR   01A1H   A   
P0M0. . . . . . . .  D ADDR   0094H   A   
P0M1. . . . . . . .  D ADDR   0093H   A   
P1M0. . . . . . . .  D ADDR   0092H   A   
P1M1. . . . . . . .  D ADDR   0091H   A   
P2M0. . . . . . . .  D ADDR   0096H   A   
P2M1. . . . . . . .  D ADDR   0095H   A   
P3M0. . . . . . . .  D ADDR   00B2H   A   
P3M1. . . . . . . .  D ADDR   00B1H   A   
P4M0. . . . . . . .  D ADDR   00B4H   A   
P4M1. . . . . . . .  D ADDR   00B3H   A   
P5M0. . . . . . . .  D ADDR   00CAH   A   
P5M1. . . . . . . .  D ADDR   00C9H   A   
P6M0. . . . . . . .  D ADDR   00CCH   A   
P6M1. . . . . . . .  D ADDR   00CBH   A   
P7M0. . . . . . . .  D ADDR   00E2H   A   
P7M1. . . . . . . .  D ADDR   00E1H   A   
PSW . . . . . . . .  D ADDR   00D0H   A   
P_SW1 . . . . . . .  D ADDR   00A2H   A   
P_SW2 . . . . . . .  D ADDR   00BAH   A   
RX4_BUFFER. . . . .  D ADDR   0040H   A   
RX4_CNT . . . . . .  D ADDR   0031H   A   
RX4_LENTH . . . . .  N NUMB   0020H   A   
S4BUF . . . . . . .  D ADDR   0085H   A   
S4CON . . . . . . .  D ADDR   0084H   A   
SP. . . . . . . . .  D ADDR   0081H   A   
STACK_POIRTER . . .  N NUMB   00D0H   A   
T2H . . . . . . . .  D ADDR   00D6H   A   
T2L . . . . . . . .  D ADDR   00D7H   A   
T4H . . . . . . . .  D ADDR   00D2H   A   
T4L . . . . . . . .  D ADDR   00D3H   A   
T4T3M . . . . . . .  D ADDR   00D1H   A   
TESTSTRING4 . . . .  C ADDR   0154H   A   
TX4_CNT . . . . . .  D ADDR   0030H   A   
UART4_BAUDRATE. . .  N NUMB   FFD0H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
